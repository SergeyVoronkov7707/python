'''
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''
a = [12, 15.4, True, 'hello world']

for i in a:
    print(i, type(i))

'''
2. Для списка реализовать обмен значений соседних элементов, т.е.
 Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. 
 При нечетном количестве элементов последний сохранить на своем месте. 
 Для заполнения списка элементов необходимо использовать функцию input().
 '''

#a = input('введите значения через запятую : ').split(',')
a = ['1', ' 12.4', ' True', " 'hello'", '123', ' 43.3', " 'world'"]
print(a,type(a))

cnt = 0

while cnt < len(a) - 1:
    a[cnt], a[cnt + 1] = a[cnt + 1], a[cnt]
    cnt +=2
print(a)


'''
3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить к какому времени года относится месяц (зима, весна, лето, осень). 
Напишите решения через list и через dict.
'''

month = {

    1: 'зима',
    2: 'зима',
    3: 'весна',
    4: 'весна',
    5: 'весна',
    6: 'лето',
    7: 'лето',
    8: 'лето',
    9: 'осень',
    10: 'осень',
    11: 'осень',
    12: 'зима'
}

print(month.setdefault(int(input('введите числовое значение месяца: '))))


'''
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. 
Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
 Если в слово длинное, выводить только первые 10 букв в слове.
 '''

#a = input('введите слова через пробел: ').split()
a = 'hello world'.split()
print(a,type(a))

for i,item in enumerate(a,1):
    max_len = len(item)
    if max_len > 10:
        item = item[:10]
    print(i,item)

'''
5. Реализовать структуру «Рейтинг», представляющую собой не 
возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. 
Если в рейтинге существуют элементы с одинаковыми значениями, 
то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
'''

my_list = [7, 5, 3, 3, 2]

while True:
    num = int(input('введите число: '))


    if not  my_list.count(num):
        if num > my_list[0]:
            my_list.insert(0,num)
        elif num < my_list[-1]:
            my_list.append(num)
        else:
            for i,item in enumerate(my_list):
                if num > item:
                    my_list.insert(i,num)
                    break
    else:
        num_index = my_list.index(num) + my_list.count(num)
        my_list.insert(num_index,num)

    print(my_list)


'''
6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. 
В кортеже должно быть два элемента — номер товара и словарь с параметрами 
(характеристиками товара: название, цена, количество, единица измерения).
 Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь,
 в котором каждый ключ — характеристика товара, например название, 
 а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''
